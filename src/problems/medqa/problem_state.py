# This file is generated by generate_problem_state.py.
from src.problems.medqa.components import Solution


def get_instance_problem_state(instance_data: dict) -> dict:
    """Extract instance problem state from instance data.

    Args:
        instance_data (dict): The dictionary contains the instance data.

    Returns:
        dict: The dictionary contains the instance problem state with:
            - symptom_num (int): The number of possible symptoms for this patient.
    """
    return {"symptom_num": len(instance_data.get("symptoms", []))}


def get_solution_problem_state(instance_data: dict, solution: Solution) -> dict:
    """Extract solution problem state from instance data and solution."""
    true_symptoms = set(instance_data.get("symptoms", []))
    collected = set(solution.collected_symptoms)
    symptom_match_ratio = len(true_symptoms & collected) / len(true_symptoms) if true_symptoms else 0
    return {
        "collected_symptoms": solution.collected_symptoms,
        "diagnosis": solution.diagnosis,
        "symptom_match_ratio": symptom_match_ratio,
        "diagnosis_set": solution.diagnosis is not None
    }


def get_observation_problem_state(problem_state: dict) -> dict:
    """Extract core problem state as observation."""
    return {
        "symptom_match_ratio": problem_state.get("symptom_match_ratio", 0),
        "diagnosis_set": problem_state.get("diagnosis_set", False)
    }
